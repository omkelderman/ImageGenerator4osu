Main Menu at top of application
  -> File
    -> New
    -> Open
    -> Save
    -> Save As
  ???????
  -> Help
    -> About



bottom bar like statusbar thingy or whatever its called


at the bottom of app a thing with a inputbox to set osu location and a big ol' generate button or something, prolly also something with input (mapids), either a inputbox or get text file or whatever idk. Also output folder I guess

In window title the name of the "file" opened. A file is a image template, saved on disk in json

left is a "toolkit" control
right is preview/editor/whatever
also left, below toolkit prolly, should be a thing that shows the current objects in the editor, order matters!!!
also somewhere in the editor window, prolly somewhere at the top, should be a thing to chose a map to use as preview
 -> if no preview-map is selected, then everything needs a default

---------

also ofc a commandline invokation where you can specify template file, and input (map ids) and output (folder)
commandline invokation with just template file is just "open that file"

should come up with own file extension, file icon, register the thing in windows registry etc so it can be used as an actual proper program lol

---------

the template thing itself has:
- size
> no background, its just transparent, if you want a background, just add it as a color-box or whatever

things to use in template
- box with color, has position, size, rounded corner thing
	- gradient?
- map bg box, has position, size, rounded corner thing.
	- Also has a property for how the bg image should fit inside the box (fill, stretch, etc whatever)
	- Also has something to make it blurry
- text-block: has position, font-size, font, color, font-props (bold, italic, whatever)
	- text can be static text or template kinda thing, should make up a template language
	* or theres two types of text-block: static and dynamic so if you wanna mix you have to use multiple
	- for number map properties should have a thing to specify rounding, and maybe things like thousend seperators and decimal point stuff
	  > just use the C# number format notation I guess?
	- have a calculated thing? like where you can combine different number props and do math with them resulting in one answer
- progress-bar kinda thing, has a postion, size, min-value, max-value, and actual-value that points to number map-prop (or calculated thing?)
	- and I guess some props to define how the thing is rendered, like, bg color, color of the progress thing, etc
	- a mode where instead of a box fillig up, it is a image repeated value time (eg star display)
	- also a prop to tell if its horizontal or vertical
- static image, position, size, the rounded corner thing, and also the thing on how the image should fit inside the box
  * static image saved as path (not portable)
  * or included as data (portable, but size gets big)
- svg or somethign simular somehow?

should have a system where position can be relative to another object





editor field:
background: #CFCFCF
1px border around canvas: #9C9C9C
checkerboard (each quad of the checkerboard is 8v8 pixels): #BFBFBF/#FFFFFF